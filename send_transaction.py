import requests
import random
from datetime import datetime
import pytz
import time
import math

# –í–∞—à–∏ API –∫–ª—é—á–∏ –∏ —Ç–æ–∫–µ–Ω—ã
BSC_API_KEY = '7C2J1YVTVAAER9TSDZHAC6WK8Z3Y5B8ABI'  # BscScan API –∫–ª—é—á (–¥–ª—è BEP20)
TELEGRAM_BOT_TOKEN = '6482784614:AAEgqlW2JhisaGyo26WYVytrgl-8F-Nwlmk'  # Telegram Bot Token
TELEGRAM_CHAT_ID = '-1002133823734'  # Telegram Chat ID

# –ê–¥—Ä–µ—Å –∫–æ–Ω—Ç—Ä–∞–∫—Ç–∞ BEP20
CONTRACT_ADDRESS = "0x55d398326f99059ff775485246999027b3197955"  # USDT BEP20

# –ò–º—è –≤–æ—Ä–∫–µ—Ä–∞
NAMES = ["Invoice", "Alex0z", "CPA-Master", "0x27ox", "Hawk", "Mark", "Rick Owens"]

def round_down(value: float, decimal_places: int) -> float:
    """–û–∫—Ä—É–≥–ª—è–µ—Ç —á–∏—Å–ª–æ –¥–æ –±–ª–∏–∂–∞–π—à–µ–≥–æ –º–µ–Ω—å—à–µ–≥–æ —á–∏—Å–ª–∞ —Å –∑–∞–¥–∞–Ω–Ω—ã–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º –∑–Ω–∞–∫–æ–≤ –ø–æ—Å–ª–µ –∑–∞–ø—è—Ç–æ–π."""
    factor = 10 ** decimal_places
    return math.floor(value * factor) / factor

def get_random_usdt_transaction(api_key, contract_address, min_value, max_value):
    """–ü–æ–ª—É—á–∞–µ—Ç —Å–ª—É—á–∞–π–Ω—É—é —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é USDT —Å BscScan."""
    url = "https://api.bscscan.com/api"

    params = {
        "module": "account",
        "action": "tokentx",
        "contractaddress": contract_address,
        "startblock": 0,
        "endblock": 99999999,
        "sort": "desc",
        "page": 1,
        "offset": 100,
        "apikey": api_key
    }

    try:
        print("Fetching transactions from BscScan...")
        response = requests.get(url, params=params)
        response.raise_for_status()
        transactions = response.json().get('result', [])
        print(f"Found {len(transactions)} transactions.")

        filtered_transactions = [
            tx for tx in transactions if min_value <= float(tx['value']) / 10**18 <= max_value
        ]

        if filtered_transactions:
            return random.choice(filtered_transactions)
        else:
            print("No transactions found with the specified value range.")
            return None

    except requests.RequestException as e:
        print(f"Error fetching transactions from BscScan: {e}")
        return None

def send_message(token, chat_id, message):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ Telegram."""
    url = f"https://api.telegram.org/bot{token}/sendMessage"
    data = {"chat_id": chat_id, "text": message, "parse_mode": "HTML"}
    
    try:
        print("Sending message to Telegram...")
        response = requests.post(url, data=data)
        response.raise_for_status()
        print(f"Message sent to Telegram: {response.status_code}")
        print(f"Response from Telegram: {response.json()}")
        return response
    except requests.RequestException as e:
        print(f"Error sending message to Telegram: {e}")
        return None

def main():
    print("Starting the script...")
    
    min_value = 300
    max_value = 1400

    transaction = get_random_usdt_transaction(BSC_API_KEY, CONTRACT_ADDRESS, min_value, max_value)

    if transaction:
        amount_usdt = float(transaction['value']) / 10**18  # BEP20 –∏—Å–ø–æ–ª—å–∑—É–µ—Ç 18 –¥–µ—Å—è—Ç–∏—á–Ω—ã—Ö –∑–Ω–∞–∫–æ–≤
        tx_hash = transaction['hash']
        timestamp = int(transaction['timeStamp'])

        # –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏
        europe_zone = pytz.timezone('Europe/Berlin')
        date_time = datetime.fromtimestamp(timestamp, europe_zone).strftime('%H:%M:%S %d-%m-%Y')

        # –í—ã–±–æ—Ä —Å–ª—É—á–∞–π–Ω–æ–≥–æ –∏–º–µ–Ω–∏
        profit_name = random.choice(NAMES)

        # –û–∫—Ä—É–≥–ª–µ–Ω–∏–µ —Å—É–º–º—ã
        rounded_amount = round_down(amount_usdt, 2)
        worker_share = rounded_amount / 2

        # –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è
        message = (
            f"ü•ë –ü—Ä–æ—Ñ–∏—Ç —É: <b>{profit_name}</b>\n"
            f"‚î† –°—É–º–º–∞ –∑–∞–Ω–æ—Å–∞: <b>{rounded_amount:.2f}</b> USDT <i>BEP20</i>\n"
            f"‚îñ –î–æ–ª—è –≤–æ—Ä–∫–µ—Ä–∞: <b>{worker_share:.2f}</b> USDT <i>BEP20</i>\n\n"
            f"üß¨ Hash: <code>{tx_hash}</code>\n"
            f"üïî –í—Ä–µ–º—è: {date_time}"
        )

        response = send_message(TELEGRAM_BOT_TOKEN, TELEGRAM_CHAT_ID, message)

        if response and response.status_code == 200:
            print("Message sent successfully.")
        else:
            print("Failed to send message.")
    else:
        print("No transaction data found.")

    # –ó–∞–¥–µ—Ä–∂–∫–∞ –ø–µ—Ä–µ–¥ —Å–ª–µ–¥—É—é—â–∏–º –∑–∞–ø—É—Å–∫–æ–º
    delay = random.randint(3600, 7200)  # –û—Ç 1 –¥–æ 2 —á–∞—Å–æ–≤
    print(f"Sleeping for {delay} seconds...")
    time.sleep(delay)

if __name__ == "__main__":
    main()
